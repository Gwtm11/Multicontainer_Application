node{
  def commit_id
  def kubernetesCredentials = 'kubernetes_credentials'
  def DOCKERHUB_CREDENTIALS = 'dockerhub_credentials'
  def webappReleaseName = "user"
  def webapp_DB_Credentials = "user_db_credentials"


    stage('Git Clone') {
        checkout scm
    }

  stage('Build docker image') {
  commit_id = sh(returnStdout: true, script: 'git rev-parse HEAD')
  commit_id = sh(returnStdout: true, script: """echo $commit_id . """).trim()
  dockerImage = docker.build ("${env.USER_IMAGE_}")
  }
        
    
  stage('Push image') {
          docker.withRegistry( '', DOCKERHUB_CREDENTIALS ) {
          dockerImage.push("$commit_id")
          dockerImage.push("latest")
      }
  }

  stage('Startup activities'){
  echo "${env.KUBERNETES_API}"
  withKubeConfig([credentialsId: kubernetesCredentials,
                      serverUrl: "${env.KUBERNETES_API}"
                      ]) {
        sh "kubectl cluster-info"
  }

  }

  stage('Continous Deployment Helm Upgrade'){
  withKubeConfig([credentialsId: kubernetesCredentials,serverUrl: "${env.KUBERNETES_API}"]) 
        sh "helm version"
        sh "pwd"
        sh "ls -a"
        sh "helm upgrade user ./helm/user/"

    }
}
                      